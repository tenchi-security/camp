{
    "ServiceWildcard": [
        "autoscaling",
        "cloudwatch",
        "dynamodb",
        "elasticfilesystem",
        "elasticmapreduce",
        "es",
        "firehose",
        "kinesis",
        "machinelearning",
        "rds",
        "redshift",
        "sagemaker",
        "sdb"
    ],
    "ServicesAffected": [
        "autoscaling",
        "cloudformation",
        "cloudwatch",
        "dynamodb",
        "ec2",
        "elasticfilesystem",
        "elasticmapreduce",
        "es",
        "firehose",
        "iam",
        "kinesis",
        "lambda",
        "machinelearning",
        "rds",
        "redshift",
        "s3",
        "sagemaker",
        "sdb",
        "sns"
    ],
    "PrivilegeEscalation": [
        {
            "type": "CreateEC2WithExistingIP",
            "actions": [
                "iam:passrole",
                "ec2:runinstances"
            ]
        },
        {
            "type": "PassExistingRoleToNewLambdaThenInvoke",
            "actions": [
                "iam:passrole",
                "lambda:createfunction",
                "lambda:invokefunction"
            ]
        },
        {
            "type": "PassExistingRoleToNewLambdaThenTriggerWithNewDynamo",
            "actions": [
                "iam:passrole",
                "lambda:createfunction",
                "lambda:createeventsourcemapping",
                "dynamodb:createtable",
                "dynamodb:putitem"
            ]
        },
        {
            "type": "PassExistingRoleToNewLambdaThenTriggerWithExistingDynamo",
            "actions": [
                "iam:passrole",
                "lambda:createfunction",
                "lambda:createeventsourcemapping"
            ]
        },
        {
            "type": "PassExistingRoleToCloudFormation",
            "actions": [
                "iam:passrole",
                "cloudformation:createstack"
            ]
        },
        {
            "type": "EditExistingLambdaFunctionWithRole",
            "actions": [
                "lambda:updatefunctioncode"
            ]
        }
    ],
    "ResourceExposure": [
        "elasticfilesystem:DeleteFileSystemPolicy",
        "elasticfilesystem:PutFileSystemPolicy",
        "elasticmapreduce:PutBlockPublicAccessConfiguration",
        "es:CreateElasticsearchDomain",
        "es:UpdateElasticsearchDomainConfig",
        "rds:AuthorizeDBSecurityGroupIngress",
        "redshift:AuthorizeSnapshotAccess",
        "redshift:CreateClusterUser",
        "redshift:CreateSnapshotCopyGrant",
        "redshift:JoinGroup",
        "redshift:ModifyClusterIamRoles",
        "redshift:RevokeSnapshotAccess",
        "sns:CreateTopic",
        "iam:PassRole"
    ],
    "DataExfiltration": [
        "s3:GetObject"
    ],
    "CredentialsExposure": [
        "redshift:GetClusterCredentials"
    ],
    "InfrastructureModification": [
        "autoscaling:AttachInstances",
        "autoscaling:AttachLoadBalancerTargetGroups",
        "autoscaling:AttachLoadBalancers",
        "autoscaling:BatchDeleteScheduledAction",
        "autoscaling:BatchPutScheduledUpdateGroupAction",
        "autoscaling:CancelInstanceRefresh",
        "autoscaling:CompleteLifecycleAction",
        "autoscaling:CreateAutoScalingGroup",
        "autoscaling:CreateLaunchConfiguration",
        "autoscaling:CreateOrUpdateTags",
        "autoscaling:DeleteAutoScalingGroup",
        "autoscaling:DeleteLaunchConfiguration",
        "autoscaling:DeleteLifecycleHook",
        "autoscaling:DeleteNotificationConfiguration",
        "autoscaling:DeletePolicy",
        "autoscaling:DeleteScheduledAction",
        "autoscaling:DeleteTags",
        "autoscaling:DetachInstances",
        "autoscaling:DetachLoadBalancerTargetGroups",
        "autoscaling:DetachLoadBalancers",
        "autoscaling:DisableMetricsCollection",
        "autoscaling:EnableMetricsCollection",
        "autoscaling:EnterStandby",
        "autoscaling:ExecutePolicy",
        "autoscaling:ExitStandby",
        "autoscaling:PutLifecycleHook",
        "autoscaling:PutNotificationConfiguration",
        "autoscaling:PutScalingPolicy",
        "autoscaling:PutScheduledUpdateGroupAction",
        "autoscaling:RecordLifecycleActionHeartbeat",
        "autoscaling:ResumeProcesses",
        "autoscaling:SetDesiredCapacity",
        "autoscaling:SetInstanceHealth",
        "autoscaling:SetInstanceProtection",
        "autoscaling:StartInstanceRefresh",
        "autoscaling:SuspendProcesses",
        "autoscaling:TerminateInstanceInAutoScalingGroup",
        "autoscaling:UpdateAutoScalingGroup",
        "cloudformation:CreateStack",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DeleteDashboards",
        "cloudwatch:DeleteInsightRules",
        "cloudwatch:DisableAlarmActions",
        "cloudwatch:DisableInsightRules",
        "cloudwatch:EnableAlarmActions",
        "cloudwatch:EnableInsightRules",
        "cloudwatch:PutDashboard",
        "cloudwatch:PutInsightRule",
        "cloudwatch:PutMetricAlarm",
        "cloudwatch:SetAlarmState",
        "cloudwatch:TagResource",
        "cloudwatch:UntagResource",
        "dynamodb:BatchWriteItem",
        "dynamodb:CreateBackup",
        "dynamodb:CreateGlobalTable",
        "dynamodb:CreateTable",
        "dynamodb:CreateTableReplica",
        "dynamodb:DeleteBackup",
        "dynamodb:DeleteItem",
        "dynamodb:DeleteTable",
        "dynamodb:DeleteTableReplica",
        "dynamodb:PutItem",
        "dynamodb:RestoreTableFromBackup",
        "dynamodb:RestoreTableToPointInTime",
        "dynamodb:TagResource",
        "dynamodb:UntagResource",
        "dynamodb:UpdateContinuousBackups",
        "dynamodb:UpdateContributorInsights",
        "dynamodb:UpdateGlobalTable",
        "dynamodb:UpdateGlobalTableSettings",
        "dynamodb:UpdateItem",
        "dynamodb:UpdateTable",
        "dynamodb:UpdateTableReplicaAutoScaling",
        "dynamodb:UpdateTimeToLive",
        "ec2:CreateTags",
        "ec2:DeleteTags",
        "ec2:RunInstances",
        "ec2:TerminateInstances",
        "elasticfilesystem:Backup",
        "elasticfilesystem:ClientRootAccess",
        "elasticfilesystem:ClientWrite",
        "elasticfilesystem:CreateAccessPoint",
        "elasticfilesystem:CreateMountTarget",
        "elasticfilesystem:CreateTags",
        "elasticfilesystem:DeleteAccessPoint",
        "elasticfilesystem:DeleteFileSystem",
        "elasticfilesystem:DeleteFileSystemPolicy",
        "elasticfilesystem:DeleteMountTarget",
        "elasticfilesystem:DeleteTags",
        "elasticfilesystem:ModifyMountTargetSecurityGroups",
        "elasticfilesystem:PutBackupPolicy",
        "elasticfilesystem:PutFileSystemPolicy",
        "elasticfilesystem:PutLifecycleConfiguration",
        "elasticfilesystem:Restore",
        "elasticfilesystem:UpdateFileSystem",
        "elasticmapreduce:AddInstanceFleet",
        "elasticmapreduce:AddInstanceGroups",
        "elasticmapreduce:AddJobFlowSteps",
        "elasticmapreduce:AddTags",
        "elasticmapreduce:CancelSteps",
        "elasticmapreduce:CreateEditor",
        "elasticmapreduce:DeleteEditor",
        "elasticmapreduce:ModifyCluster",
        "elasticmapreduce:ModifyInstanceFleet",
        "elasticmapreduce:ModifyInstanceGroups",
        "elasticmapreduce:OpenEditorInConsole",
        "elasticmapreduce:PutAutoScalingPolicy",
        "elasticmapreduce:PutManagedScalingPolicy",
        "elasticmapreduce:RemoveAutoScalingPolicy",
        "elasticmapreduce:RemoveManagedScalingPolicy",
        "elasticmapreduce:RemoveTags",
        "elasticmapreduce:SetTerminationProtection",
        "elasticmapreduce:StartEditor",
        "elasticmapreduce:StopEditor",
        "elasticmapreduce:TerminateJobFlows",
        "es:AddTags",
        "es:CreateElasticsearchDomain",
        "es:CreateOutboundCrossClusterSearchConnection",
        "es:DeleteElasticsearchDomain",
        "es:ESHttpDelete",
        "es:ESHttpPatch",
        "es:ESHttpPost",
        "es:ESHttpPut",
        "es:RemoveTags",
        "es:UpdateElasticsearchDomainConfig",
        "es:UpgradeElasticsearchDomain",
        "firehose:CreateDeliveryStream",
        "firehose:DeleteDeliveryStream",
        "firehose:PutRecord",
        "firehose:PutRecordBatch",
        "firehose:StartDeliveryStreamEncryption",
        "firehose:StopDeliveryStreamEncryption",
        "firehose:TagDeliveryStream",
        "firehose:UntagDeliveryStream",
        "firehose:UpdateDestination",
        "iam:PassRole",
        "kinesis:AddTagsToStream",
        "kinesis:CreateStream",
        "kinesis:DecreaseStreamRetentionPeriod",
        "kinesis:DeleteStream",
        "kinesis:DeregisterStreamConsumer",
        "kinesis:IncreaseStreamRetentionPeriod",
        "kinesis:MergeShards",
        "kinesis:PutRecord",
        "kinesis:PutRecords",
        "kinesis:RegisterStreamConsumer",
        "kinesis:RemoveTagsFromStream",
        "kinesis:SplitShard",
        "kinesis:StartStreamEncryption",
        "kinesis:StopStreamEncryption",
        "lambda:CreateAlias",
        "lambda:CreateFunction",
        "lambda:DeleteAlias",
        "lambda:DeleteEventSourceMapping",
        "lambda:DeleteFunction",
        "lambda:DeleteFunctionConcurrency",
        "lambda:DeleteFunctionEventInvokeConfig",
        "lambda:DeleteLayerVersion",
        "lambda:DeleteProvisionedConcurrencyConfig",
        "lambda:InvokeFunction",
        "lambda:PublishVersion",
        "lambda:UpdateAlias",
        "lambda:UpdateEventSourceMapping",
        "lambda:UpdateFunctionCode",
        "lambda:UpdateFunctionConfiguration",
        "lambda:UpdateFunctionEventInvokeConfig",
        "machinelearning:AddTags",
        "machinelearning:CreateBatchPrediction",
        "machinelearning:CreateDataSourceFromRDS",
        "machinelearning:CreateDataSourceFromRedshift",
        "machinelearning:CreateDataSourceFromS3",
        "machinelearning:CreateEvaluation",
        "machinelearning:CreateMLModel",
        "machinelearning:CreateRealtimeEndpoint",
        "machinelearning:DeleteBatchPrediction",
        "machinelearning:DeleteDataSource",
        "machinelearning:DeleteEvaluation",
        "machinelearning:DeleteMLModel",
        "machinelearning:DeleteRealtimeEndpoint",
        "machinelearning:DeleteTags",
        "machinelearning:Predict",
        "machinelearning:UpdateBatchPrediction",
        "machinelearning:UpdateDataSource",
        "machinelearning:UpdateEvaluation",
        "machinelearning:UpdateMLModel",
        "rds:AddRoleToDBCluster",
        "rds:AddRoleToDBInstance",
        "rds:AddSourceIdentifierToSubscription",
        "rds:AddTagsToResource",
        "rds:ApplyPendingMaintenanceAction",
        "rds:AuthorizeDBSecurityGroupIngress",
        "rds:BacktrackDBCluster",
        "rds:CopyDBClusterParameterGroup",
        "rds:CopyDBClusterSnapshot",
        "rds:CopyDBParameterGroup",
        "rds:CopyDBSnapshot",
        "rds:CopyOptionGroup",
        "rds:CreateDBCluster",
        "rds:CreateDBClusterEndpoint",
        "rds:CreateDBClusterParameterGroup",
        "rds:CreateDBClusterSnapshot",
        "rds:CreateDBInstance",
        "rds:CreateDBInstanceReadReplica",
        "rds:CreateDBParameterGroup",
        "rds:CreateDBSecurityGroup",
        "rds:CreateDBSnapshot",
        "rds:CreateDBSubnetGroup",
        "rds:CreateEventSubscription",
        "rds:CreateGlobalCluster",
        "rds:CreateOptionGroup",
        "rds:DeleteDBCluster",
        "rds:DeleteDBClusterEndpoint",
        "rds:DeleteDBClusterParameterGroup",
        "rds:DeleteDBClusterSnapshot",
        "rds:DeleteDBInstance",
        "rds:DeleteDBParameterGroup",
        "rds:DeleteDBProxy",
        "rds:DeleteDBSecurityGroup",
        "rds:DeleteDBSnapshot",
        "rds:DeleteDBSubnetGroup",
        "rds:DeleteEventSubscription",
        "rds:DeleteGlobalCluster",
        "rds:DeleteOptionGroup",
        "rds:DeregisterDBProxyTargets",
        "rds:FailoverDBCluster",
        "rds:ModifyCurrentDBClusterCapacity",
        "rds:ModifyDBCluster",
        "rds:ModifyDBClusterEndpoint",
        "rds:ModifyDBClusterParameterGroup",
        "rds:ModifyDBClusterSnapshotAttribute",
        "rds:ModifyDBInstance",
        "rds:ModifyDBParameterGroup",
        "rds:ModifyDBProxy",
        "rds:ModifyDBProxyTargetGroup",
        "rds:ModifyDBSnapshot",
        "rds:ModifyDBSnapshotAttribute",
        "rds:ModifyDBSubnetGroup",
        "rds:ModifyEventSubscription",
        "rds:ModifyGlobalCluster",
        "rds:ModifyOptionGroup",
        "rds:PromoteReadReplica",
        "rds:PromoteReadReplicaDBCluster",
        "rds:PurchaseReservedDBInstancesOffering",
        "rds:RebootDBInstance",
        "rds:RegisterDBProxyTargets",
        "rds:RemoveFromGlobalCluster",
        "rds:RemoveRoleFromDBCluster",
        "rds:RemoveRoleFromDBInstance",
        "rds:RemoveSourceIdentifierFromSubscription",
        "rds:RemoveTagsFromResource",
        "rds:ResetDBClusterParameterGroup",
        "rds:ResetDBParameterGroup",
        "rds:RestoreDBClusterFromS3",
        "rds:RestoreDBClusterFromSnapshot",
        "rds:RestoreDBClusterToPointInTime",
        "rds:RestoreDBInstanceFromDBSnapshot",
        "rds:RestoreDBInstanceFromS3",
        "rds:RestoreDBInstanceToPointInTime",
        "rds:RevokeDBSecurityGroupIngress",
        "rds:StartActivityStream",
        "rds:StartDBCluster",
        "rds:StartDBInstance",
        "rds:StopActivityStream",
        "rds:StopDBCluster",
        "rds:StopDBInstance",
        "redshift:AuthorizeClusterSecurityGroupIngress",
        "redshift:AuthorizeSnapshotAccess",
        "redshift:BatchDeleteClusterSnapshots",
        "redshift:BatchModifyClusterSnapshots",
        "redshift:CancelResize",
        "redshift:CopyClusterSnapshot",
        "redshift:CreateCluster",
        "redshift:CreateClusterParameterGroup",
        "redshift:CreateClusterSecurityGroup",
        "redshift:CreateClusterSnapshot",
        "redshift:CreateClusterSubnetGroup",
        "redshift:CreateClusterUser",
        "redshift:CreateEventSubscription",
        "redshift:CreateHsmClientCertificate",
        "redshift:CreateHsmConfiguration",
        "redshift:CreateSnapshotCopyGrant",
        "redshift:CreateSnapshotSchedule",
        "redshift:CreateTags",
        "redshift:DeleteCluster",
        "redshift:DeleteClusterParameterGroup",
        "redshift:DeleteClusterSecurityGroup",
        "redshift:DeleteClusterSnapshot",
        "redshift:DeleteClusterSubnetGroup",
        "redshift:DeleteEventSubscription",
        "redshift:DeleteHsmClientCertificate",
        "redshift:DeleteHsmConfiguration",
        "redshift:DeleteSnapshotCopyGrant",
        "redshift:DeleteSnapshotSchedule",
        "redshift:DeleteTags",
        "redshift:DisableLogging",
        "redshift:DisableSnapshotCopy",
        "redshift:EnableLogging",
        "redshift:EnableSnapshotCopy",
        "redshift:GetClusterCredentials",
        "redshift:JoinGroup",
        "redshift:ModifyCluster",
        "redshift:ModifyClusterDbRevision",
        "redshift:ModifyClusterIamRoles",
        "redshift:ModifyClusterParameterGroup",
        "redshift:ModifyClusterSnapshot",
        "redshift:ModifyClusterSnapshotSchedule",
        "redshift:ModifyClusterSubnetGroup",
        "redshift:ModifyEventSubscription",
        "redshift:ModifySnapshotCopyRetentionPeriod",
        "redshift:ModifySnapshotSchedule",
        "redshift:PauseCluster",
        "redshift:RebootCluster",
        "redshift:ResetClusterParameterGroup",
        "redshift:ResizeCluster",
        "redshift:RestoreFromClusterSnapshot",
        "redshift:RestoreTableFromClusterSnapshot",
        "redshift:ResumeCluster",
        "redshift:RevokeClusterSecurityGroupIngress",
        "redshift:RevokeSnapshotAccess",
        "redshift:RotateEncryptionKey",
        "s3:AbortMultipartUpload",
        "s3:CreateBucket",
        "s3:DeleteObject",
        "s3:GetObject",
        "s3:PutAccelerateConfiguration",
        "s3:PutBucketCORS",
        "s3:PutBucketLogging",
        "s3:PutBucketNotification",
        "s3:PutBucketTagging",
        "s3:PutObject",
        "s3:ReplicateDelete",
        "s3:ReplicateObject",
        "s3:ReplicateTags",
        "s3:RestoreObject",
        "sagemaker:CreateApp",
        "sagemaker:CreateFlowDefinition",
        "sagemaker:CreatePresignedDomainUrl",
        "sagemaker:DeleteApp",
        "sagemaker:DeleteFlowDefinition",
        "sdb:BatchDeleteAttributes",
        "sdb:BatchPutAttributes",
        "sdb:CreateDomain",
        "sdb:DeleteAttributes",
        "sdb:DeleteDomain",
        "sdb:PutAttributes",
        "sns:CreateTopic"
    ]
}