{
    "ServiceWildcard": [
        "cloudwatch",
        "dynamodb",
        "events",
        "lambda",
        "logs",
        "s3"
    ],
    "ServicesAffected": [
        "cloudwatch",
        "cognito-sync",
        "dynamodb",
        "events",
        "iam",
        "iot",
        "kinesis",
        "lambda",
        "logs",
        "s3",
        "sns",
        "sqs"
    ],
    "PrivilegeEscalation": [
        {
            "type": "PassExistingRoleToNewLambdaThenInvoke",
            "actions": [
                "iam:passrole",
                "lambda:createfunction",
                "lambda:invokefunction"
            ]
        },
        {
            "type": "PassExistingRoleToNewLambdaThenTriggerWithNewDynamo",
            "actions": [
                "iam:passrole",
                "lambda:createfunction",
                "lambda:createeventsourcemapping",
                "dynamodb:createtable",
                "dynamodb:putitem"
            ]
        },
        {
            "type": "PassExistingRoleToNewLambdaThenTriggerWithExistingDynamo",
            "actions": [
                "iam:passrole",
                "lambda:createfunction",
                "lambda:createeventsourcemapping"
            ]
        },
        {
            "type": "EditExistingLambdaFunctionWithRole",
            "actions": [
                "lambda:updatefunctioncode"
            ]
        }
    ],
    "ResourceExposure": [
        "iam:PassRole",
        "iot:AttachPrincipalPolicy",
        "lambda:AddLayerVersionPermission",
        "lambda:AddPermission",
        "lambda:DisableReplication",
        "lambda:EnableReplication",
        "lambda:RemoveLayerVersionPermission",
        "lambda:RemovePermission",
        "logs:DeleteResourcePolicy",
        "logs:PutResourcePolicy",
        "s3:BypassGovernanceRetention",
        "s3:DeleteAccessPointPolicy",
        "s3:DeleteBucketPolicy",
        "s3:ObjectOwnerOverrideToBucketOwner",
        "s3:PutAccessPointPolicy",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutBucketAcl",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutObjectAcl",
        "s3:PutObjectVersionAcl"
    ],
    "DataExfiltration": [
        "s3:GetObject"
    ],
    "CredentialsExposure": [],
    "InfrastructureModification": [
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DeleteDashboards",
        "cloudwatch:DeleteInsightRules",
        "cloudwatch:DisableAlarmActions",
        "cloudwatch:DisableInsightRules",
        "cloudwatch:EnableAlarmActions",
        "cloudwatch:EnableInsightRules",
        "cloudwatch:PutDashboard",
        "cloudwatch:PutInsightRule",
        "cloudwatch:PutMetricAlarm",
        "cloudwatch:SetAlarmState",
        "cloudwatch:TagResource",
        "cloudwatch:UntagResource",
        "cognito-sync:SetCognitoEvents",
        "dynamodb:BatchWriteItem",
        "dynamodb:CreateBackup",
        "dynamodb:CreateGlobalTable",
        "dynamodb:CreateTable",
        "dynamodb:CreateTableReplica",
        "dynamodb:DeleteBackup",
        "dynamodb:DeleteItem",
        "dynamodb:DeleteTable",
        "dynamodb:DeleteTableReplica",
        "dynamodb:PutItem",
        "dynamodb:RestoreTableFromBackup",
        "dynamodb:RestoreTableToPointInTime",
        "dynamodb:TagResource",
        "dynamodb:UntagResource",
        "dynamodb:UpdateContinuousBackups",
        "dynamodb:UpdateContributorInsights",
        "dynamodb:UpdateGlobalTable",
        "dynamodb:UpdateGlobalTableSettings",
        "dynamodb:UpdateItem",
        "dynamodb:UpdateTable",
        "dynamodb:UpdateTableReplicaAutoScaling",
        "dynamodb:UpdateTimeToLive",
        "events:ActivateEventSource",
        "events:CreateEventBus",
        "events:CreatePartnerEventSource",
        "events:DeactivateEventSource",
        "events:DeleteEventBus",
        "events:DeletePartnerEventSource",
        "events:DeleteRule",
        "events:DisableRule",
        "events:EnableRule",
        "events:PutEvents",
        "events:PutRule",
        "events:PutTargets",
        "events:RemoveTargets",
        "events:TagResource",
        "events:UntagResource",
        "iam:PassRole",
        "iot:AttachPrincipalPolicy",
        "iot:CreateThing",
        "iot:CreateTopicRule",
        "iot:ReplaceTopicRule",
        "kinesis:PutRecord",
        "lambda:AddLayerVersionPermission",
        "lambda:AddPermission",
        "lambda:CreateAlias",
        "lambda:CreateFunction",
        "lambda:DeleteAlias",
        "lambda:DeleteEventSourceMapping",
        "lambda:DeleteFunction",
        "lambda:DeleteFunctionConcurrency",
        "lambda:DeleteFunctionEventInvokeConfig",
        "lambda:DeleteLayerVersion",
        "lambda:DeleteProvisionedConcurrencyConfig",
        "lambda:DisableReplication",
        "lambda:EnableReplication",
        "lambda:InvokeAsync",
        "lambda:InvokeFunction",
        "lambda:PublishLayerVersion",
        "lambda:PublishVersion",
        "lambda:PutFunctionConcurrency",
        "lambda:PutFunctionEventInvokeConfig",
        "lambda:PutProvisionedConcurrencyConfig",
        "lambda:RemoveLayerVersionPermission",
        "lambda:RemovePermission",
        "lambda:TagResource",
        "lambda:UntagResource",
        "lambda:UpdateAlias",
        "lambda:UpdateEventSourceMapping",
        "lambda:UpdateFunctionCode",
        "lambda:UpdateFunctionConfiguration",
        "lambda:UpdateFunctionEventInvokeConfig",
        "logs:AssociateKmsKey",
        "logs:CreateExportTask",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:DeleteLogGroup",
        "logs:DeleteLogStream",
        "logs:DeleteMetricFilter",
        "logs:DeleteRetentionPolicy",
        "logs:DeleteSubscriptionFilter",
        "logs:DisassociateKmsKey",
        "logs:PutLogEvents",
        "logs:PutMetricFilter",
        "logs:PutRetentionPolicy",
        "logs:PutSubscriptionFilter",
        "logs:TagLogGroup",
        "logs:UntagLogGroup",
        "s3:AbortMultipartUpload",
        "s3:BypassGovernanceRetention",
        "s3:CreateAccessPoint",
        "s3:CreateBucket",
        "s3:DeleteAccessPoint",
        "s3:DeleteAccessPointPolicy",
        "s3:DeleteBucket",
        "s3:DeleteBucketPolicy",
        "s3:DeleteBucketWebsite",
        "s3:DeleteJobTagging",
        "s3:DeleteObject",
        "s3:DeleteObjectTagging",
        "s3:DeleteObjectVersion",
        "s3:DeleteObjectVersionTagging",
        "s3:GetObject",
        "s3:ObjectOwnerOverrideToBucketOwner",
        "s3:PutAccelerateConfiguration",
        "s3:PutAccessPointPolicy",
        "s3:PutAnalyticsConfiguration",
        "s3:PutBucketAcl",
        "s3:PutBucketCORS",
        "s3:PutBucketLogging",
        "s3:PutBucketNotification",
        "s3:PutBucketObjectLockConfiguration",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketRequestPayment",
        "s3:PutBucketTagging",
        "s3:PutBucketVersioning",
        "s3:PutBucketWebsite",
        "s3:PutEncryptionConfiguration",
        "s3:PutInventoryConfiguration",
        "s3:PutJobTagging",
        "s3:PutLifecycleConfiguration",
        "s3:PutMetricsConfiguration",
        "s3:PutObject",
        "s3:PutObjectAcl",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionAcl",
        "s3:PutObjectVersionTagging",
        "s3:PutReplicationConfiguration",
        "s3:ReplicateDelete",
        "s3:ReplicateObject",
        "s3:ReplicateTags",
        "s3:RestoreObject",
        "s3:UpdateJobPriority",
        "s3:UpdateJobStatus",
        "sns:Publish",
        "sns:Subscribe",
        "sqs:SendMessage"
    ]
}